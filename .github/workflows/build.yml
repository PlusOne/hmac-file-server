jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        go-version: [ '1.20' ]
        arch: [ 'amd64', 'arm64' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-
            ${{ runner.os }}-

      - name: Download dependencies
        run: |
          go mod tidy
          go mod download

      - name: Set up Test Configuration and Run Tests
        run: |
          ./fix_tests.sh

      - name: Print directory structure
        run: |
          echo "Directory structure:"
          tree -L 3 || echo "tree command not found. Install it oder überprüfe die Struktur manuell."

      - name: Print Go environment
        run: |
          echo "Go Environment Variables:"
          go env

      - name: Build for ${{ matrix.arch }}
        env:
          GOOS: linux
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p build/${{ matrix.arch }}
          go build -v -o build/${{ matrix.arch }}/hmac-file-server ./cmd/server

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.arch }}
          path: build/${{ matrix.arch }}/hmac-file-server
